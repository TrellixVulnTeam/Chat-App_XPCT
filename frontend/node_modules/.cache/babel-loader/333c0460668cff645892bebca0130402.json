{"ast":null,"code":"var _jsxFileName = \"/home/fffzlfk/go-file/Chat-App/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect, sendMessage } from \"./api\";\nimport Header from \"./components/Header\";\nimport ChatHistory from \"./components/ChatHistroy\";\nimport ChatInput from \"./components/ChatInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatHistory: []\n    }; // this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n    connect(msg => {\n      console.log(\"New Message\");\n      let ch = this.state.chatHistory;\n      this.setState(() => ({\n        chatHistory: [...ch, msg]\n      }));\n      console.log(this.state.chatHistory);\n    });\n  }\n\n  send(event) {\n    if (event.keyCode === 13) {\n      sendMessage(event.target.value);\n      event.target.value = \"\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatHistory, {\n        chatHistory: this.state.chatHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        send: this.send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/fffzlfk/go-file/Chat-App/frontend/src/App.js"],"names":["React","Component","connect","sendMessage","Header","ChatHistory","ChatInput","App","constructor","props","state","chatHistory","componentDidMount","msg","console","log","ch","setState","send","event","keyCode","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb,CAFiB,CAKjB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,OAAO,CAAEW,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,UAAIC,EAAE,GAAG,KAAKN,KAAL,CAAWC,WAApB;AACA,WAAKM,QAAL,CAAc,OAAO;AACnBN,QAAAA,WAAW,EAAE,CAAC,GAAGK,EAAJ,EAAQH,GAAR;AADM,OAAP,CAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,WAAvB;AACD,KARM,CAAP;AASD;;AAEDO,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACV,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxBjB,MAAAA,WAAW,CAACgB,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACAH,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKb,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKO;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AApCyB;;AAuC5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from \"react\"\nimport \"./App.css\"\nimport { connect, sendMessage } from \"./api\"\nimport Header from \"./components/Header\"\nimport ChatHistory from \"./components/ChatHistroy\"\nimport ChatInput from \"./components/ChatInput\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      chatHistory: []\n    }\n    // this.componentDidMount = this.componentDidMount.bind(this)\n  }\n\n  componentDidMount() {\n    connect((msg) => {\n      console.log(\"New Message\")\n      let ch = this.state.chatHistory\n      this.setState(() => ({\n        chatHistory: [...ch, msg]\n      }))\n\n      console.log(this.state.chatHistory)\n    })\n  }\n\n  send(event) {\n    if (event.keyCode === 13) {\n      sendMessage(event.target.value)\n      event.target.value = \"\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ChatHistory chatHistory={this.state.chatHistory} />\n        <ChatInput send={this.send} />\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}